import java.util.ArrayList;

/**
 *   –î–æ—Å—Ç–æ—Ä –±—É–ª –∂–µ—Ä–¥–µ–≥–∏ –º–µ—Ç–æ–¥—Ç–æ—Ä–¥—É –∞—Ç—ã–Ω –∞–π—Ç—ã–ø –∂–∞—Ç–∫–∞–Ω–¥–∞–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—ã–ª—É—É –∫–µ—Ä–µ–∫
 *   –ú–∏—Å–∞–ª—ã  ArrayList<Student> getAllOfflineStudents(ArrayList<Student> students);
 *   –ë—É–ª –∂–µ—Ä–¥–µ –ë–∞–∞—Ä–¥—ã–∫ –û—Ñ—Ñ–ª–∞–π–Ω –æ–∫—É—É–≥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ —á—ã–≥–∞—Ä—É—É –∫–µ—Ä–µ–∫(enum) –ø–æ–ª—è—Å—ã –∞—Ä–∫—ã–ª—É—É —Å–∞–ª—ã—à—Ç—ã—Ä–∞–±—ã–∑
 *
 */

// –ë—É–ª –∂–µ—Ä–≥–µ StudentService —Ç–∏–Ω –º–µ—Ç–æ–¥—Ç–æ—Ä—É–Ω –∞–ª—ã–ø –∫–µ–ª—É—É –∫–µ—Ä–µ–∫ –±–∏—Ä–æ–∫ –∫–∞–Ω—Ç–∏–ø ü§î?
public class StudentServiceImpl implements StudentService {


    @Override
    public Student getById(ArrayList<Student> students, int studentId) {
        for (Student student : students) {
            if (student.getId()==studentId){
                return student;
            }
        }
      return null;
    }

    @Override
    public Student getByName(ArrayList<Student> students, String studentName) {
        for (Student student : students) {
            if (student.getName().equals(studentName)){
                return student;
            }
        }
        return null;
    }

    @Override
    public void getAllStudents(ArrayList<Student> students) {
        for (Student student : students) {
            System.out.println(student);
        }
    }

    @Override
    public ArrayList<Student> getAllStudentBoys(ArrayList<Student> students) {
        ArrayList<Student>studentBoys = new ArrayList<>();
        for (Student student : students) {
            if (student.getGender()==Gender.MALE){
                studentBoys.add(student);
            }

        }
        return studentBoys;
    }

    @Override
    public ArrayList<Student> getAllStudentGirls(ArrayList<Student> students) {
        ArrayList<Student>studentGirls = new ArrayList<>();
        for (Student student : students) {
            if (student.getGender()==Gender.FEMALE){
                studentGirls.add(student);
            }
        }
        return studentGirls;
    }

    @Override
    public ArrayList<Student> getAllOfflineStudents(ArrayList<Student> students) {
        ArrayList<Student>offlineStudents=new ArrayList<>();
        for (Student student : students) {
            if (student.getStudyFormat()==StudyFormat.OFLINE){
                offlineStudents.add(student);
            }
        }
        return offlineStudents;
    }

    @Override
    public ArrayList<Student> getAllOnlineStudents(ArrayList<Student> students) {
        ArrayList<Student>onlineStudents=new ArrayList<>();
        for (Student student : students) {
            if (student.getStudyFormat()==StudyFormat.ONLINE){
                onlineStudents.add(student);
            }
        }
        return onlineStudents;
    }

    @Override
    public double getAverageAge(ArrayList<Student> students) {
        double sum =0;
        for (Student student : students) {
            sum +=student.getAge();
        }
        return sum /students.size();
    }
}
